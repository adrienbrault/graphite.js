{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"UA-10510045-2","body":"Graphite.js provides a consistent, flexible way to interact with the Graphite\r\n[render api](http://graphite.readthedocs.org/en/latest/render_api.html). It has\r\nno external dependencies.\r\n\r\n## Getting started\r\n\r\nGraphite.js provides a chainable api, with a special `url` method that\r\nreturns a url corresponding to the accumulated property values. The\r\nminimum useful url requires a target (metric) to graph. The Graphite\r\nhost is assumed to be \"/render\", but no other properties are provided default\r\nvalues. Instead, your Graphite server's configuration specifies what defaults\r\nit will use in generating graphs.\r\n\r\n```javascript\r\n    Graphite().url() == \"/render\";\r\n    Graphite().targets([\"some.key\"]).url() == \"/render?target=some.key\";\r\n    Graphite().host('http://metrics.biz/render')\r\n              .targets([\"some.key\"])\r\n              .url() == \"http://metrics.biz/render?target=some.key\";\r\n```\r\n\r\nParameters can be initialized by providing a dictionary to the functor, or\r\nset by method chaining.\r\n\r\n```javascript\r\n    Graphite({\r\n        from: \"-2days\",\r\n        until: \"now\",\r\n        height: \"300\",\r\n        targets: [\"some.key\", \"some.other.key\"],\r\n    }).url();\r\n    Graphite()\r\n      .from(\"-2days\")\r\n      .until(\"now\")\r\n      .height(\"300\")\r\n      .targets([\r\n        \"some.key\",\r\n        \"some.other.key\"\r\n      ]);\r\n    // not recommended, but still works\r\n    Graphite()({from: \"-2days\"})({height: \"300\"}).targets([\"bad.ideas\"])().url();\r\n```\r\n\r\nMethod names match parameters in the Graphite api documentation, with the\r\nfollowing exceptions:\r\n\r\n* `host` is added to provide customization of the graphite host location\r\n* `target` is not present, since graphite expects multiple values of target\r\n      with multiple keys. Instead, `targets` is provided and expects an array\r\n      of values for graph targets\r\n* `url` is a getter only that returns the url corresponding to the current\r\n      internal state.\r\n\r\nA complete list of valid parameters is in the source documentation. The\r\nGraphite object uses the **closures with getter-setter methods** pattern for\r\nall properties.\r\n\r\n```javascript\r\n    var g = Graphite({\r\n        host: \"/render\",\r\n    }).host(\"http://metrics.biz/render\");\r\n    g.host() == \"http://metrics.biz/render\";\r\n```\r\n\r\nHowever, it does no error checking. You are responsible for making sure you're\r\npassing legal values.\r\n\r\n```javascript\r\n    Graphite().graphType(\"lolwut?\").url() == \"/render?graphType=lolwut?\";\r\n    Graphite().graphType(\"1337\").url() == \"/render?graphType=1337\";\r\n```\r\n\r\n## Tests\r\n\r\nGraphite.js uses qunit to run the tests. Crack open your web browser of choice\r\nand load testRunner.html to get started.\r\n","name":"Graphite.js","tagline":"a javascript client library for working with the Graphite render api"}