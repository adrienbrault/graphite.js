{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","body":"# Graphite.js\r\n### a javascript client library for working with [Graphite](http://graphite.wikidot.com/)\r\n\r\nGraphite provides a\r\n[render api](http://graphite.readthedocs.org/en/latest/render_api.html)\r\nfor acessing its data. Minimally, you will need to provide a target to graph.\r\nIf not provided, the host is assumed to be \"/render\", all other options are not\r\nprovided unless specified, falling back to your graphite configuration's\r\ndefaults.\r\n\r\n    Graphite().url() == \"/render\";\r\n    Graphite().targets([\"some.key\"]).url() == \"/render?target=some.key\";\r\n\r\nParameters can be initialized by providing a dictionary to the functor, or\r\nset by method chaining.\r\n\r\n    Graphite({\r\n        from: \"-2days\",\r\n        until: \"now\",\r\n        height: \"300\",\r\n        targets: [\"some.key\", \"some.other.key\"],\r\n    }).url();\r\n    Graphite()\r\n      .from(\"-2days\")\r\n      .until(\"now\")\r\n      .height(\"300\")\r\n      .targets([\r\n        \"some.key\",\r\n        \"some.other.key\"\r\n      ]);\r\n    // not recommended, but still works\r\n    Graphite()({from: \"-2days\"})({height: \"300\"}).targets([\"bad.ideas\"])().url();\r\n\r\nMethod names match parameters in the Graphite api documentation, with the\r\nfollowing exceptions:\r\n\r\n* `host` is added to provide customization of the graphite host location\r\n* `target` is not present, since graphite expects multiple values of target\r\n      with multiple keys. Instead, `targets` is provided and expects an array\r\n      of values for graph targets\r\n\r\nA complete list of valid parameters is in the source documentation. The\r\nGraphite object uses the **closures with getter-setter methods** pattern for\r\nall properties.\r\n\r\n    var g = Graphite({\r\n        host: \"/render\",\r\n    }).host(\"http://metrics.biz/render\");\r\n    g.host() == \"http://metrics.biz/render\";\r\n\r\nHowever, it does no error checking. You are responsible for making sure you're\r\npassing legal values.\r\n\r\n    Graphite().graphType(\"lolwut?\").url() == \"/render?graphType=lolwut?\";\r\n    Graphite().graphType(\"1337\").url() == \"/render?graphType=1337\";\r\n\r\n## Tests\r\n\r\nGraphite.js uses qunit to run the tests. Crack open your web browser of choice\r\nand load testRunner.html to get started.\r\n","name":"Graphite.js","tagline":"a javascript client library for interfacing with the graphite render api"}